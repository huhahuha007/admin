<Library>
    <class name="Blob" paramPolicyMandatory="true">
      <method name="slice" returnType="Blob">
        <param name="start" type="long" optional="true"/>
        <param name="end" type="long" optional="true"/>
        <param name="contentType" type="String" optional="true"/>
      </method>
      <property name="size" readOnly="true" type="long" />
      <property name="type" readOnly="true" type="String" />
    </class>
    <class name="FileList">
      <method name="item" returnType="File">
        <param name="item" type="int"/>
      </method>
      <property name="length" readOnly="true" type="int"/>
      <!--todo typed array of File : item-->
    </class>
    <class name="HTMLInputElement">
      <property type="FileList" name="files" readOnly="true" />
    </class>
    <class name="File" extends="Blob">
      <property name="name" type="String" readOnly="true"/>
      <property name="lastModifiedDate" type="Date" readOnly="true" />
    </class>
    <class name="FileReader" extends="EventTarget" paramPolicyMandatory="true">
      <static>
        <property name="EMPTY" type="int" readOnly="true" value="0"/>
        <property name="LOADING" type="int" readOnly="true" value="1"/>
        <property name="DONE" type="int" readOnly="true" value="2"/>
      </static>
      <method name="readAsArrayBuffer" returnType="void">
        <param name="blob" type="Blob"/>
      </method>
      <method name="readAsBinaryString" returnType="void">
        <param name="blob" type="Blob"/>
      </method>
      <method name="readAsText" returnType="void">
        <param name="blob" type="Blob"/>
        <param name="encoding" type="String" optional="true"/>
      </method>
      <method name="readAsDataURL" returnType="void">
        <param name="blob" type="Blob"/>
      </method>
      <method name="abort" returnType="void"/>
      <property name="readyState" type="int" readOnly="true"/>
      <property name="result" type="Object" readOnly="true"/>
      <property name="error" type="Error" readOnly="true"/>

      <property name="onloadstart" type="Function" writeOnly="true" />
      <property name="onprogress" type="Function" writeOnly="true" />
      <property name="onload" type="Function" writeOnly="true" />
      <property name="onabort" type="Function" writeOnly="true" />
      <property name="onerror" type="Function" writeOnly="true" />
      <property name="onloadend" type="Function" writeOnly="true" />
    </class>
    <class name="Node">
      <property name="dataset" readOnly="true" type="DOMStringMap" />
      <property name="classList" readOnly="true" type="DOMTokenList" />
    </class>

    <class name="DOMStringMap"/>
    <class name="DOMTokenList">
      <method name="item" returnType="String">
        <param name="index" type="Number"/>
      </method>
      <method name="contains" returnType="Boolean">
        <param name="className" optional="false" type="String"/>
      </method>
      <property name="length" type="Number" readOnly="true"/>
      <method name="add">
        <param name="className" type="String" rest="true" />
      </method>
      <method name="remove">
        <param name="className" type="String" rest="true" />
      </method>
      <method name="toggle">
        <param name="className" optional="false" type="String"/>
        <param name="force" optional="true" type="boolean"/>
      </method>
    </class>

    <class name="DatabaseCallback">
      <method name="handleEvent" returnType="void">
        <param name="database" optional="false" type="Database" />
      </method>
    </class>
    <class name="Notification" extends="EventTarget">
      <static>
        <property name="permission" readOnly="true"/>
        <method name="requestPermission" returnType="void">
          <param name="callback" type="Function" optional="true"/>
        </method>
      </static>
      <method name="show" returnType="void"/>
      <method name="cancel" returnType="void"/>
      <property name="ondisplay" type="Function" />
      <property name="onerror" type="Function" />
      <property name="onclose" type="Function" />
    </class>

  <class name="HtmlElement">
  </class>
  
    <class name="HTMLMediaElement" extends="HTMLElement">
      <static>
        <property name="HAVE_NOTHING" type="Number" readOnly="true" value="0"/>
        <property name="HAVE_METADATA" type="Number" readOnly="true" value="1"/>
        <property name="HAVE_CURRENT_DATA" type="Number" readOnly="true" value="2"/>
        <property name="HAVE_FUTURE_DATA" type="Number" readOnly="true" value="3"/>
        <property name="HAVE_ENOUGH_DATA" type="Number" readOnly="true" value="4"/>

        <property name="NETWORK_EMPTY" type="Number" readOnly="true" value="0"/>
        <property name="NETWORK_IDLE" type="Number" readOnly="true" value="1"/>
        <property name="NETWORK_LOADING" type="Number" readOnly="true" value="2"/>
        <property name="NETWORK_NO_SOURCE" type="Number" readOnly="true" value="3"/>
      </static>

      <property name="error" type="MediaError" readOnly="true"/>
      <property name="src" type="String" />
      <property name="currentSrc" type="String" readOnly="true"/>
      <property name="networkState" type="Number" readOnly="true"/>
      <property name="preload" type="String" />
      <property name="buffered" type="TimeRanges" readOnly="true"/>
      <method name="load" returnType="void"/>
      <method name="canPlayType" returnType="String">
        <param name="type" type="String" optional="false"/>
      </method>
      <property name="readyState" type="Number" readOnly="true"/>
      <property name="seeking" type="Boolean" readOnly="true"/>
      <property name="currentTime" type="Number" />
      <property name="startTime" type="Number" readOnly="true"/>
      <property name="duration" type="Number" readOnly="true"/>
      <property name="paused" type="Boolean" readOnly="true"/>
      <property name="defaultPlaybackRate" type="Number" />
      <property name="playbackRate" type="Number" />
      <property name="played" type="TimeRanges" readOnly="true"/>
      <property name="seekable" type="TimeRanges" readOnly="true"/>
      <property name="ended" type="Boolean" readOnly="true"/>
      <property name="autoplay" type="Boolean" />
      <property name="loop" type="Boolean" />
            
      <method name="play" returnType="void"/>
      <method name="pause" returnType="void"/>
      
      <property name="controls" type="Boolean" />
      <property name="volume" type="Number" />
      <property name="muted" type="Boolean" />
      
      <property name="tracks" type="Array" readOnly="true"/> <!--TimeTrack-->
      <method name="addTrack" returnType="MutableTimedTrack">
        <param name="label" optional="false" type="String"/>
        <param name="kind" optional="false" type="String"/>
        <param name="language" optional="false" type="String"/>
      </method>
    </class>
    <class name="MediaError">
      <static>
        <property name="MEDIA_ERR_ABORTED" type="int" readOnly="true" value="1"/>
        <property name="MEDIA_ERR_NETWORK" type="int" readOnly="true" value="2"/>
        <property name="MEDIA_ERR_DECODE" type="int" readOnly="true" value="3"/>
        <property name="MEDIA_ERR_SRC_NOT_SUPPORTED" type="int" readOnly="true" value="4"/>
      </static>
      <property name="code" type="int" readOnly="true"/>
    </class>
    <class name="TimeRanges">
      <property name="length" type="int" readOnly="true"/>
      <method name="start" returnType="int">
        <param name="index" type="int" optional="false"/>
      </method>
      <method name="end" returnType="int">
        <param name="index" type="int" optional="false"/>
      </method>
    </class>
    <class name="TimedTrack">
      <static>
        <property name="NONE" type="int" readOnly="true" value="0"/>
        <property name="LOADING" type="int" readOnly="true" value="1"/>
        <property name="LOADED" type="int" readOnly="true" value="2"/>
        <property name="ERROR" type="int" readOnly="true" value="3"/>

        <property name="OFF" type="int" readOnly="true" value="0"/>
        <property name="HIDDEN" type="int" readOnly="true" value="1"/>
        <property name="SHOWING" type="int" readOnly="true" value="2"/>
      </static>

      <property name="kind" type="String" readOnly="true"/>
      <property name="label" type="String" readOnly="true"/>
      <property name="language" type="String" readOnly="true"/>

      <property name="readyState" type="int" readOnly="true"/>
      <property name="onload" type="Function" readOnly="true"/>
      <property name="onerror" type="Function" readOnly="true"/>


      <property name="mode" type="int"/>

      <property name="cues" type="TimedTrackCueList" readOnly="true"/>
      <property name="activeCues" type="TimedTrackCueList" readOnly="true"/>
      <property name="onentercue" type="Function" readOnly="true"/>
      <property name="onexitcue" type="Function" readOnly="true"/>
    </class>
  <class name="MutableTimedTrack" extends="TimedTrack">
      <method name="addCue" returnType="void">
        <param name="cue" optional="false" type="TimedTrackCue"/>
      </method>
      <method name="removeCue" returnType="void">
        <param name="cue" optional="false" type="TimedTrackCue"/>
      </method>
    </class>
    <class name="TimedTrackCue">
      <property name="track" type="TimedTrack" readOnly="true"/>
      <property name="id" type="String" readOnly="true"/>
      <property name="startTime" type="Number" readOnly="true"/>
      <property name="endTime" type="Number" readOnly="true"/>
      <property name="pauseOnExit" type="Boolean" readOnly="true"/>
      
      <property name="direction" type="String" readOnly="true"/>
      <property name="snapToLines" type="Boolean" readOnly="true"/>
      <property name="linePosition" type="Number" readOnly="true"/>
      <property name="textPosition" type="Number" readOnly="true"/>
      <property name="size" type="Number" readOnly="true"/>
      <property name="alignment" type="String" readOnly="true"/>
      
      <property name="voice" type="String" readOnly="true"/>
      <method name="getCueAsSource" returnType="String"/>
      <method name="getCueAsHTML" returnType="DocumentFragment"/>
      <method name="TimedTrackCue" returnType="TimedTrackCue">
        <param name="id" optional="false" type="String"/>
        <param name="startTime" optional="false" type="Number"/>
        <param name="endTime" optional="false" type="Number"/>
        <param name="settings" optional="false" type="String"/>
        <param name="text" optional="false" type="String"/>
        <param name="pauseOnExit" type="Boolean"/>
      </method>      
    </class>
    <class name="TimedTrackCueList">
      <property name="length" type="Number" readOnly="true"/>
      <method name="getCueById" returnType="TimedTrackCue">
        <param name="id" type="String" optional="false"/>
      </method>
    </class>
    <class name="HTMLVideoElement" extends="HTMLMediaElement">
      <property name="width" type="Number" />
      <property name="height" type="Number" />
      <property name="videoWidth" type="Number" readOnly="true"/>
      <property name="videoHeight" type="Number" readOnly="true" />
      <property name="poster" type="String" />      
    </class>
    <class name="Database">
      <method name="transaction">
        <param name="callback" optional="false" type="SQLTransactionCallback|SQLTransactionSyncCallback|Function" />
        <param name="errorCallback" type="SQLTransactionErrorCallback|Function" />
        <param name="successCallback" type="SQLVoidCallback|Function" />
      </method>
      <method name="readTransaction">
        <param name="callback" optional="false" type="SQLTransactionCallback|SQLTransactionSyncCallback|Function" />
        <param name="errorCallback" type="SQLTransactionErrorCallback|Function" />
        <param name="successCallback" type="SQLVoidCallback|Function" />
      </method>
      <property name="version" type="String" readOnly="true"/>
      <method name="changeVersion">
        <param name="oldVersion" optional="false" type="String" />
        <param name="newVersion" optional="false" type="String" />
        <param name="callback" type="SQLTransactionCallback|Function" />
        <param name="errorCallback" type="SQLTransactionErrorCallback|Function" />
        <param name="successCallback" type="SQLVoidCallback|Function" />
      </method>
    </class>
  
    <class name="SQLVoidCallback">
      <method name="handleEvent" returnType="void"/>
    </class>
  
    <class name="SQLTransactionCallback">
      <method name="handleEvent" returnType="void">
        <param name="transaction" type="SQLTransaction" />
      </method>
    </class>
  
    <class name="SQLTransactionErrorCallback">
      <method name="handleEvent" returnType="void">
        <param name="error" type="SQLError" />
      </method>
    </class>
  
    <class name="SQLTransaction">
      <method name="executeSql" returnType="void">
        <param name="sqlStatement" optional="false" type="String" />
        <param name="arguments" type="Object[]" />
        <param name="callback" type="SQLStatementCallback" />
        <param name="errorCallback" type="SQLStatementErrorCallback" />
      </method>
    </class>
  
    <class name="SQLStatementCallback">
      <method name="handleEvent" returnType="void">
        <param name="transaction" type="SQLTransaction" />
        <param name="resultSet" type="SQLResultSet" />
      </method>
    </class>
  
    <class name="SQLStatementErrorCallback">
      <method name="handleEvent" returnType="Boolean">
        <param name="transaction" type="SQLTransaction" />
        <param name="error" type="SQLError" />
      </method>
    </class>
  
    <class name="SQLTransactionSyncCallback">
      <method name="handleEvent" returnType="void">
        <param name="transaction" type="SQLTransactionSync" />
      </method>
    </class>
  
    <class name="SQLTransactionSync">
      <method name="executeSql" returnType="SQLResultSet">
        <param name="sqlStatement" type="String" optional="false" />
        <param name="arguments" type="Object[]"/>
      </method>
    </class>
  
    <class name="SQLResultSet">
      <property name="insertId" type="Number" readOnly="true"/>
      <property name="rowsAffected" type="Number" readOnly="true"/>
      <property name="rows" type="SQLResultSetRowList" readOnly="true"/>
    </class>
  
    <class name="SQLResultSetRowList">
      <property name="length" type="int" readOnly="true"/>
      <method name="item">
        <param name="index" type="int" optional="false" />
      </method>
    </class>

  <class name="SQLError">
    <static>
      <property name="UNKNOWN_ERR" type="int" readOnly="true" value="0"/>
      <property name="DATABASE_ERR" type="int" readOnly="true" value="1"/>
      <property name="VERSION_ERR" type="int" readOnly="true" value="2"/>
      <property name="TOO_LARGE_ERR" type="int" readOnly="true" value="3"/>
      <property name="QUOTA_ERR" type="int" readOnly="true" value="4"/>
      <property name="SYNTAX_ERR" type="int" readOnly="true" value="5"/>
      <property name="CONSTRAINT_ERR" type="int" readOnly="true" value="6"/>
      <property name="TIMEOUT_ERR" type="int" readOnly="true" value="7"/>
    </static>
    <property name="code" type="int" readOnly="true"/>
    <property name="message" type="String" readOnly="true"/>
  </class>

  <class name="MessageEvent" extends="Event">
    <property name="origin" type="String" readOnly="true"/>
    <property name="lastEventId" type="String" readOnly="true"/>
    <property name="source" type="Window" readOnly="true"/>
  </class>

    <class name="History">
      <property name="length" type="int" readOnly="true"/>
      <property name="state" type="Object" readOnly="true"/>

      <method name="pushState" returnType="void">
        <param name="data" type="Object"/>
        <param name="title" type="String"/>
        <param name="url" type="String" optional="true"/>
      </method>
      <method name="replaceState" returnType="void">
        <param name="data" type="Object"/>
        <param name="title" type="String"/>
        <param name="url" type="String" optional="true"/>
      </method>
    </class>

    <class name="Location">
      <method name="assign" returnType="void">
        <param name="url" type="String"/>
      </method>
      <method name="resolveURL" returnType="String">
        <param name="url" type="String"/>
      </method>
    </class>

  <class name="SQLException" extends="Error">
    <static>
      <property name="UNKNOWN_ERR" type="int" readOnly="true" value="0"/>
      <property name="DATABASE_ERR" type="int" readOnly="true" value="1"/>
      <property name="VERSION_ERR" type="int" readOnly="true" value="2"/>
      <property name="TOO_LARGE_ERR" type="int" readOnly="true" value="3"/>
      <property name="QUOTA_ERR" type="int" readOnly="true" value="4"/>
      <property name="SYNTAX_ERR" type="int" readOnly="true" value="5"/>
      <property name="CONSTRAINT_ERR" type="int" readOnly="true" value="6"/>
      <property name="TIMEOUT_ERR" type="int" readOnly="true" value="7"/>
    </static>
    <property name="code" type="int" readOnly="true"/>
    <property name="message" type="String" readOnly="true"/>
  </class>

  <class name="HTMLImageElement" extends="HTMLElement">
    <property name="crossOrigin" type="String"/>
    <property name="complete" type="Boolean" readOnly="true"/>
    <property name="naturalHeight" type="long" readOnly="true"/>
    <property name="naturalWidth" type="long" readOnly="true"/>
  </class>

  <class name="HTMLCanvasElement" extends="HTMLElement">
    <property name="width" type="long"/>
    <property name="height" type="long"/>
    <method name="getContext" returnType="(CanvasRenderingContext2D|WebGLRenderingContext)">
      <param name="contextId" type="String" optional="false"/>
      <param name="args" type="*" rest="true"/>
    </method>
    <method name="toDataURL" returnType="String">
      <param name="String" type="String"/>
      <param name="args" type="*"/>
    </method>
  </class>

  <class name="CanvasPattern">
    <method name="setTransform">
      <param name="transform" type="SVGMatrix"/>
    </method>
  </class>
  <class name="SVGMatrix">
    <method name="inverse"/>
  </class>
  
    <class name="CanvasRenderingContext2D">
      <property name="canvas" type="HTMLCanvasElement" readOnly="true"/> <!--back-reference to the canvas-->
      <method name="save"/>  <!--push state on state stack-->
      <method name="restore"/> <!--pop state stack and restore state-->

      <!--transformations (default transform is the identity matrix)-->
      <method name="scale" >
        <param name="x" optional="false" type="Float"/>
        <param name="y" optional="false" type="Float"/>
      </method>

      <method name="rotate" >
        <param name="angle" optional="false" type="Float"/>
      </method>
      <method name="translate" >
        <param name="x" optional="false" type="Float"/>
        <param name="y" optional="false" type="Float"/>
      </method>
      
      <method name="transform" >
        <param name="m11" optional="false" type="Float" />
        <param name="m12" optional="false" type="Float" />
        <param name="m21" optional="false" type="Float" />
        <param name="m22" optional="false" type="Float" />
        <param name="dx" optional="false" type="Float" />
        <param name="dy" optional="false" type="Float" />
      </method>
      
      <method name="setTransform" >
        <param name="m11" optional="false" type="Float" />
        <param name="m12" optional="false" type="Float" />
        <param name="m21" optional="false" type="Float" />
        <param name="m22" optional="false" type="Float" />
        <param name="dx" optional="false" type="Float" />
        <param name="dy" optional="false" type="Float" />
      </method>

      <!--compositing-->
      <property name="globalAlpha" type="Float" /> <!--(default 1.0)-->
      <property name="globalCompositeOperation" type="String"/>  <!--(default source-over)-->
      <property name="fillStyle" type="String|CanvasGradient|CanvasPattern"/>  <!--(default black)-->
      <property name="strokeStyle" type="String|CanvasGradient|CanvasPattern"/> <!--(default black)-->
      
      <method name="createLinearGradient" returnType="CanvasGradient">
        <param name="x0" optional="false" type="Float" />
        <param name="y0" optional="false" type="Float" />
        <param name="x1" optional="false" type="Float" />
        <param name="y1" optional="false" type="Float" />
      </method>
      
      <method name="createRadialGradient" returnType="CanvasGradient">
        <param name="x0" optional="false" type="Float" />
        <param name="y0" optional="false" type="Float" />
        <param name="r0" optional="false" type="Float" />
        <param name="x1" optional="false" type="Float" />
        <param name="y1" optional="false" type="Float" />
        <param name="r1" optional="false" type="Float" />
      </method>
      
      <method name="createPattern" returnType="CanvasPattern">
        <param name="image" optional="false" type="HTMLImageElement|HTMLCanvasElement|HTMLVideoElement" />
        <param name="repetition" optional="false" type="String"/>
      </method>
      
      <!--line caps/joins-->
      <property name="lineWidth" type="Number"/> <!--default 1-->
      <property name="lineCap" type="String"/> <!--"butt", "round", "square" (default "butt")--> 
      <property name="lineJoin" type="String"/> <!--"round", "bevel", "miter" (default "miter")--> 
      <property name="miterLimit" type="Number"/> <!--(default 10)--> 
      
      <!--shadows-->
      <property name="shadowOffsetX" type="Number"/> <!--(default 0)-->
      <property name="shadowOffsetY" type="Number"/> <!--(default 0)-->
      <property name="shadowBlur" type="Number"/> <!--(default 0)-->
      <property name="shadowColor" type="String"/> <!--transparent black-->
      
      <!--rects-->
      <method name="clearRect" >
        <param name="x" optional="false" type="Number" />
        <param name="y" optional="false" type="Number" />
        <param name="w" optional="false" type="Number" />
        <param name="h" optional="false" type="Number" />
      </method>
      <method name="fillRect" >
        <param name="x" optional="false" type="Number" />
        <param name="y" optional="false" type="Number" />
        <param name="w" optional="false" type="Number" />
        <param name="h" optional="false" type="Number" />
      </method>
      <method name="strokeRect" >
        <param name="x" optional="false" type="Number" />
        <param name="y" optional="false" type="Number" />
        <param name="w" optional="false" type="Number" />
        <param name="h" optional="false" type="Number" />
      </method>
      
      <!--path API-->
      <method name="beginPath" />
      <method name="closePath" />
      <method name="moveTo" >
        <param name="x" optional="false" type="Number" />
        <param name="y" optional="false" type="Number" />
      </method>
      <method name="lineTo" >
        <param name="x" optional="false" type="Number" />
        <param name="y" optional="false" type="Number" />
      </method>
      
      <method name="quadraticCurveTo" >
        <param name="cpx" optional="false" type="Number" />
        <param name="cpy" optional="false" type="Number" />
        <param name="x" optional="false" type="Number" />
        <param name="y" optional="false" type="Number" />
      </method>
      
      <method name="bezierCurveTo" >
        <param name="cp1x" optional="false" type="Number" />
        <param name="cp1y" optional="false" type="Number" />
        <param name="cp2x" optional="false" type="Number" />
        <param name="cp2y" optional="false" type="Number" />
        <param name="x" optional="false" type="Number" />
        <param name="y" optional="false" type="Number" />
      </method>
      
      <method name="arcTo" >
        <param name="x1" optional="false" type="Number" />
        <param name="y1" optional="false" type="Number" />
        <param name="x2" optional="false" type="Number" />
        <param name="y2" optional="false" type="Number" />
        <param name="radius" optional="false" type="Number" />
      </method>
      
      <method name="rect" >
        <param name="x" optional="false" type="Number" />
        <param name="y" optional="false" type="Number" />
        <param name="w" optional="false" type="Number" />
        <param name="h" optional="false" type="Number" />
      </method>
      
      <method name="arc" >
        <param name="x" optional="false" type="Number" />
        <param name="y" optional="false" type="Number" />
        <param name="radius" optional="false" type="Number" />
        <param name="startAngle" optional="false" type="Number" />
        <param name="endAngle" optional="false" type="Number" />
        <param name="anticlockwise" optional="true" type="Boolean" />
      </method>
      
      <method name="fill" />
      <method name="stroke" />
      <method name="clip" />
      
      <method name="isPointInPath" returnType="Boolean">
        <param name="x" optional="false" type="Number" />
        <param name="y" optional="false" type="Number" />
      </method>
      
      <!--focus management-->
      <method name="drawFocusRing" >
        <param name="element" optional="false" type="Element" />
        <param name="xCaret" optional="false" type="Number" />
        <param name="yCaret" optional="false" type="Number" />
        <param name="canDrawCustom" type="Boolean" />
      </method>
      
      <!--text-->
      <property name="font" type="String"/> <!--default 10px sans-serif-->
      <property name="textAlign" type="String"/> <!--"start", "end", "left", "right", "center" (default: "start")-->
      <property name="textBaseline" type="String"/> <!--"top", "hanging", "middle", "alphabetic", "ideographic", "bottom" (default: "alphabetic")-->
      
      <method name="fillText" >
        <param name="text" optional="false" type="String" />
        <param name="x" optional="false" type="Number" />
        <param name="y" optional="false" type="Number" />
        <param name="maxWidth" type="Number" />
      </method>
      
      <method name="strokeText" >
        <param name="text" optional="false" type="String" />
        <param name="x" optional="false" type="Number" />
        <param name="y" optional="false" type="Number" />
        <param name="maxWidth" type="Number" />
      </method>

      <method name="measureText" returnType="TextMetrics">
        <param name="text" optional="false" type="String" />
      </method>
      
      <!--drawing images-->
      <method name="drawImage" >
        <param name="img_elem" optional="false" type="Element" /> <!--HTMLImageElement|HTMLCanvasElement|HTMLVideo-->
        <param name="dx_or_sx" optional="false" type="Number" />
        <param name="dy_or_sy" optional="false" type="Number" />
        <param name="dw_or_sw" type="Number" />
        <param name="dh_or_sh" type="Number" />
        
        <param name="dx" type="Number" />
        <param name="dy" type="Number" />
        <param name="dw" type="Number" />
        <param name="dh" type="Number" />
      </method>
      <method name="createImageData" returnType="ImageData">
        <param name="imagedata_or_sw" optional="false" type="ImageData|Number" />
        <param name="sh" type="Number" />
      </method>
      <method name="getImageData" returnType="ImageData">
        <param name="sx" optional="false" type="Number" />
        <param name="sy" optional="false" type="Number" />
        <param name="sw" optional="false" type="Number" />
        <param name="sh" optional="false" type="Number" />
      </method>
      
      <method name="putImageData">
        <param name="image_data" optional="false" type="ImageData" />
        <param name="dx" optional="false" type="Number" />
        <param name="dy" optional="false" type="Number" />
        <param name="dirtyX" type="Number" /> 
        <param name="dirtyY" type="Number" /> 
        <param name="dirtyWidth" type="Number" /> 
        <param name="dirtyHeight" type="Number" /> 
      </method>
    </class>
  <class name="CanvasGradient">
    <method name="addColorStop">
        <param name="offset" optional="false" type="Number" />
        <param name="color" optional="false" type="String" />
      </method>
  </class>
  <class name="ImageData">
    <property name="data" type="CanvasPixelArray" readOnly="true"/>
    <property name="width" type="Number" readOnly="true" />
    <property name="height" type="Number" readOnly="true" />
  </class>
  <class name="CanvasPixelArray">
    <property name="length" type="Number" readOnly="true" />
  </class>
  <class name="TextMetrics">
    <property name="width" type="Number" readOnly="true" />
  </class>
  <class name="Window" paramPolicyMandatory="true">
    <method name="webkitRequestAnimationFrame" returnType="Number">
      <param name="callback" type="Function"/>
      <param name="element" type="Element"/>
    </method>
    <method name="webkitCancelAnimationFrame" returnType="void">
      <param name="callback" type="Function"/>
    </method>
    <method name="msRequestAnimationFrame" returnType="Number">
      <param name="callback" type="Function"/>
    </method>
    <method name="msCancelAnimationFrame" returnType="void">
      <param name="callback" type="Function"/>
    </method>
    <method name="oRequestAnimationFrame" returnType="Number">
      <param name="callback" type="Function"/>
    </method>
    <method name="oCancelAnimationFrame" returnType="void">
      <param name="callback" type="Function"/>
    </method>

    <method name="mozRequestAnimationFrame" returnType="Number">
      <param name="callback" type="Function"/>
    </method>
    <method name="mozCancelAnimationFrame" returnType="void">
      <param name="callback" type="Function"/>
    </method>
    <method name="requestAnimationFrame" returnType="Number">
      <param name="callback" type="function(number):void"/>
    </method>

    <method name="cancelAnimationFrame" returnType="void">
      <param name="handle" type="long"/>
    </method>

    <method name="importScripts" returnType="void">
      <param name="urls" type="String" rest="true" />
    </method>
    <property name="navigator" type="WorkerNavigator" readOnly="true" />
    <method name="openDatabase" returnType="Database">
        <param name="name" type="String" />
        <param name="version" type="String" />
        <param name="displayName" type="String" />
        <param name="estimatedSize" type="Number" />
        <param name="creationCallback" type="DatabaseCallback|Function" optional="true"/>
      </method>
    <method name="openDatabaseSync" returnType="Database">
        <param name="name" type="String" />
        <param name="version" type="String" />
        <param name="displayName" type="String" />
        <param name="estimatedSize" type="Number" />
        <param name="creationCallback" type="DatabaseCallback|Function" optional="true"/>
      </method>
    <property name="localStorage" type="Storage" readOnly="true"/>
    <property name="sessionStorage" type="Storage" readOnly="true"/>
    <method name="matchMedia" returnType="MediaQueryList">
      <param name="mediaQueryString" type="string"/>
    </method>
  </class>

  <class name="MediaQueryList">
    <property name="matches" type="boolean" readOnly="true"/>
    <property name="media" type="string"/>
    <method name="addListener">
      <param name="listener"/>
    </method>
    <method name="removeListener">
      <param name="listener"/>
    </method>
  </class>

  <class name="WorkerNavigator"/>
  <class name="AbstractWorker">
    <property name="onerror" type="Function"/>
  </class>
  <trait name="Transferable"/>
  <class name="Worker" extends="AbstractWorker" paramPolicyMandatory="true">
    <method name="__constructor__">
      <param name="scriptURL" type="String"/>
    </method>
    <method name="terminate" />
    <method name="postMessage">
      <param name="message" type="*"/>
      <param name="transferList" type="Transferable[]" optional="true"/>
    </method>
    <property name="onmessage" type="function({data: Object})"/>
  </class>
  <class name="SharedWorker" extends="AbstractWorker">
    <property name="port" type="Function" readOnly="true"/>
  </class>
  
  <trait name="Storage">
    <property name="length" type="long" readOnly="true"/>
    <method name="key" returnType="String">
      <param name="index" type="long"/>
    </method>
    <method name="getItem">
      <param name="key" type="String"/>
    </method>
    <method name="setItem">
      <param name="key" type="String"/>
      <param name="data" type="String|*" />
    </method>
    <method name="removeItem">
      <param name="key" type="String"/>
    </method>
    
    <method name="clear"/>
  </trait>

  <class name="WebSocket" paramPolicyMandatory="true">
    <method name="__constructor__">
      <param name="url" type="String"/>
      <param name="protocols" type="String" rest="true"/>
    </method>
    <static>
      <property name="CONNECTING" type="int" readOnly="true" value="0"/>
      <property name="OPEN" type="int" readOnly="true" value="1"/>
      <property name="CLOSING" type="int" readOnly="true" value="2"/>
      <property name="CLOSED" type="int" readOnly="true" value="3"/>
    </static>
    <property name="url" type="String" />
    <property name="readyState" type="int" readOnly="true"/>
    <property name="bufferedAmount" type="long" readOnly="true"/>
    <property name="extensions" type="String" readOnly="true"/>
    <property name="protocol" type="String" readOnly="true"/>
    <property name="onopen" type="function(Event)"/>
    <property name="onmessage" type="function({data: (String|Blob|ArrayBuffer)})"/>
    <property name="onerror" type="function(Event)"/>
    <property name="onclose" type="function({code: Long, reason: String, wasClean: Boolean})"/>
    
    <method name="send">
      <param name="data" type="String|ArrayBuffer|ArrayBufferView|Blob"/>
    </method>
    <method name="close">
      <param name="code" type="long" optional="true"/>
      <param name="reason" type="String" optional="true"/>
    </method>
  </class>
  
  <class name="ArrayBuffer">
    <method name="__constructor__">
      <param name="length" type="long" optional="false"/>
    </method>
    <static>
      <method name="isView" returnType="boolean">
        <param name="arg" optional="false"/>
      </method>
    </static>
    <property name="byteLength" type="long" readOnly="true"/>
    <method name="slice" returnType="ArrayBuffer">
      <param name="start" type="number" optional="false"/>
      <param name="end" type="number" optional="false"/>
    </method>
  </class>

  <class name="DataView">
    <property name="buffer" type="ArrayBuffer" readOnly="true"/>
    <property name="byteOffset" type="long" readOnly="true"/>
    <property name="byteLength" type="long" readOnly="true"/>

    <method name="__constructor__">
      <param name="bufferOrArrayOrLength" optional="false"/>
      <param name="byteOffset" type="long"/>
      <param name="length" type="long"/>
    </method>

    <method name="getFloat32" returnType="number">
      <param name="byteOffset" type="long"/>
      <param name="littleEndian" type="boolean" default="false" optional="true"/>
    </method>
    <method name="getFloat64" returnType="number">
      <param name="byteOffset" type="long"/>
      <param name="littleEndian" type="boolean" default="false" optional="true"/>
    </method>
    <method name="getInt8" returnType="byte">
      <param name="byteOffset" type="long"/>
    </method>
    <method name="getInt16" returnType="int">
      <param name="byteOffset" type="long"/>
      <param name="littleEndian" type="boolean" default="false" optional="true"/>
    </method>
    <method name="getInt32" returnType="int">
      <param name="byteOffset" type="long"/>
      <param name="littleEndian" type="boolean" default="false" optional="true"/>
    </method>
    <method name="getUint8" returnType="byte">
      <param name="byteOffset" type="long"/>
    </method>
    <method name="getUint16" returnType="int">
      <param name="byteOffset" type="long"/>
      <param name="littleEndian" type="boolean" default="false" optional="true"/>
    </method>
    <method name="getUint32" returnType="int">
      <param name="byteOffset" type="long"/>
      <param name="littleEndian" type="boolean" default="false" optional="true"/>
    </method>

    <method name="setFloat32">
      <param name="byteOffset" type="long"/>
      <param name="value" type="number"/>
      <param name="littleEndian" type="boolean" default="false" optional="true"/>
    </method>
    <method name="setFloat64">
      <param name="byteOffset" type="long"/>
      <param name="value" type="number"/>
      <param name="littleEndian" type="boolean" default="false" optional="true"/>
    </method>
    <method name="setInt8">
      <param name="byteOffset" type="long"/>
      <param name="value" type="byte"/>
    </method>
    <method name="setInt16">
      <param name="byteOffset" type="long"/>
      <param name="value" type="int"/>
      <param name="littleEndian" type="boolean" default="false" optional="true"/>
    </method>
    <method name="setInt32">
      <param name="byteOffset" type="long"/>
      <param name="value" type="int"/>
      <param name="littleEndian" type="boolean" default="false" optional="true"/>
    </method>
    <method name="setUint8">
      <param name="byteOffset" type="long"/>
      <param name="value" type="int"/>
    </method>
    <method name="setUint16">
      <param name="byteOffset" type="long"/>
      <param name="value" type="int"/>
      <param name="littleEndian" type="boolean" default="false" optional="true"/>
    </method>
    <method name="setUint32">
      <param name="byteOffset" type="long"/>
      <param name="value" type="int"/>
      <param name="littleEndian" type="boolean" default="false" optional="true"/>
    </method>
  </class>

  <class name="ArrayBufferView" open="true">
    <method name="__constructor__"/>
    <property name="buffer" type="ArrayBuffer" readOnly="true"/>
    <property name="byteOffset" type="long" readOnly="true"/>
    <property name="byteLength" type="long" readOnly="true"/>
  </class>
  
  <class name="Int8Array" extends="ArrayBufferView">
    <static>
      <property name="BYTES_PER_ELEMENT" type="int" value="8" readOnly="true"/>
    </static>
    <method name="__constructor__">
      <param name="bufferOrArrayOrLength" optional="false"/>
      <param name="byteOffset" type="long"/>
      <param name="length" type="long"/>
    </method>
    <property name="length" readOnly="true" />
    <method name="set" returnType="void">
      <param name="array" type="$__Type__$" optional="false"/>
      <param name="offset" type="long"/>
    </method>
    <method name="subarray" returnType="$__Type__$">
      <param name="begin" type="long" optional="false"/>
      <param name="end" type="long"/>
    </method>
  </class>

  <class name="Uint8Array" extends="ArrayBufferView">
    <static>
      <property name="BYTES_PER_ELEMENT" type="int" value="8" readOnly="true"/>
    </static>
    <method name="__constructor__">
      <param name="bufferOrArrayOrLength" optional="false"/>
      <param name="byteOffset" type="long"/>
      <param name="length" type="long"/>
    </method>
    <property name="length" type="long" readOnly="true"/>
    <method name="set" returnType="void">
      <param name="array" type="$__Type__$" optional="false"/>
      <param name="offset" type="long"/>
    </method>
    <method name="subarray" returnType="$__Type__$">
      <param name="begin" type="long" optional="false"/>
      <param name="end" type="long"/>
    </method>
  </class>
  <class name="Int16Array" extends="ArrayBufferView">
    <static>
      <property name="BYTES_PER_ELEMENT" type="int" readOnly="true" value="16"/>
    </static>
    <method name="__constructor__">
      <param name="bufferOrArrayOrLength" optional="false"/>
      <param name="byteOffset" type="long"/>
      <param name="length" type="long"/>
    </method>
    <property name="length" type="long" readOnly="true"/>
    <method name="set" returnType="void">
      <param name="array" type="$__Type__$" optional="false"/>
      <param name="offset" type="long"/>
    </method>
    <method name="subarray" returnType="$__Type__$">
      <param name="begin" type="long" optional="false"/>
      <param name="end" type="long"/>
    </method>
  </class>
  <class name="Uint16Array" extends="ArrayBufferView">
    <static>
      <property name="BYTES_PER_ELEMENT" readOnly="true" type="int" value="16"/>
    </static>
    <method name="__constructor__">
      <param name="bufferOrArrayOrLength" optional="false"/>
      <param name="byteOffset" type="long"/>
      <param name="length" type="long"/>
    </method>
    <property name="length" type="long" readOnly="true"/>
    <method name="set" returnType="void">
      <param name="array" type="$__Type__$" optional="false"/>
      <param name="offset" type="long"/>
    </method>
    <method name="subarray" returnType="$__Type__$">
      <param name="begin" type="long" optional="false"/>
      <param name="end" type="long"/>
    </method>
  </class>
  <class name="Int32Array" extends="ArrayBufferView">
    <static>
      <property name="BYTES_PER_ELEMENT" readOnly="true" type="int" value="32"/>
    </static>
    <method name="__constructor__">
      <param name="bufferOrArrayOrLength" optional="false"/>
      <param name="byteOffset" type="long"/>
      <param name="length" type="long"/>
    </method>
    <property name="length" readOnly="true" type="long"/>
    <method name="set" returnType="void">
      <param name="array" type="$__Type__$" optional="false"/>
      <param name="offset" type="long"/>
    </method>
    <method name="subarray" returnType="$__Type__$">
      <param name="begin" type="long" optional="false"/>
      <param name="end" type="long"/>
    </method>
  </class>
  <class name="Uint32Array" extends="ArrayBufferView">
    <static>
      <property name="BYTES_PER_ELEMENT" readOnly="true" type="int" value="32"/>
    </static>
    <method name="__constructor__">
      <param name="bufferOrArrayOrLength" optional="false"/>
      <param name="byteOffset" type="Number"/>
      <param name="length" type="Number"/>
    </method>
    <property name="length" type="long" readOnly="true"/>
    <method name="set" returnType="void">
      <param name="array" type="$__Type__$" optional="false"/>
      <param name="offset" type="Number"/>
    </method>
    <method name="subarray" returnType="$__Type__$">
      <param name="begin" type="Number" optional="false"/>
      <param name="end" type="Number"/>
    </method>
  </class>

  <class name="Float32Array" extends="ArrayBufferView">
    <static>
      <property name="BYTES_PER_ELEMENT" readOnly="true" type="int" value="32"/>
    </static>
    <method name="__constructor__">
      <param name="bufferOrArrayOrLength" optional="false"/>
      <param name="byteOffset" type="long"/>
      <param name="length" type="long"/>
    </method>
    <property name="length" type="long" readOnly="true"/>
    <method name="set" returnType="void">
      <param name="array" type="$__Type__$" optional="false"/>
      <param name="offset" type="long"/>
    </method>
    <method name="subarray" returnType="$__Type__$">
      <param name="begin" type="long" optional="false"/>
      <param name="end" type="long"/>
    </method>
  </class>

  <class name="Float64Array" extends="ArrayBufferView">
    <static>
      <property name="BYTES_PER_ELEMENT" readOnly="true" type="int" value="64"/>
    </static>

    <method name="__constructor__">
      <param name="bufferOrArrayOrLength" type="long" optional="false"/>
      <param name="byteOffset" type="long"/>
      <param name="length" type="long"/>
    </method>
    <property name="length" type="long" readOnly="true"/>
    <method name="set" returnType="void">
      <param name="array" type="$__Type__$" optional="false"/>
      <param name="offset" type="long"/>
    </method>

    <method name="subarray" returnType="$__Type__$">
      <param name="begin" type="long" optional="false"/>
      <param name="end" type="long"/>
    </method>
  </class>
  <class name="Geolocation">
    <method name="getCurrentPosition" returnType="void">
      <param name="successCallback" type="Function" optional="false"/>
      <param name="errorCallback" type="Function" />
      <param name="options" type="Object" />
    </method>
    <method name="watchPosition" returnType="Number">
      <param name="successCallback" type="Function" optional="false"/>
      <param name="errorCallback" type="Function" />
      <param name="options" type="Object" />
    </method>
    <method name="clearWatch">
      <param name="watchId" type="Number"/>
    </method>
  </class>
  <class name="Navigator">
    <property readOnly="true" name="geolocation" type="Geolocation" />
  </class>
  <class name="PositionOptions">
    <property name="enableHighAccuracy" type="Boolean" />
    <property name="timeout" type="Number" />
    <property name="maximumAge" type="Number" />
  </class>
  <class name="Position">
    <property name="coords" type="Coordinates" />
    <property name="timestamp" type="Number" />
  </class>
  <class name="Coordinates">
    <property name="latitude" type="Number" readOnly="true" />
    <property name="longitude" type="Number" readOnly="true" />
    <property name="altitude" type="Number" readOnly="true" />
    <property name="accuracy" type="Number" readOnly="true" />
    <property name="altitudeAccuracy" type="Number" readOnly="true" />
    <property name="heading" type="Number" readOnly="true" />
    <property name="speed" type="Number" readOnly="true" />
  </class>
  <class name="PositionError">
    <property name="PERMISSION_DENIED" type="int" value="1" readOnly="true"/>
    <property name="POSITION_UNAVAILABLE" type="int" value="2" readOnly="true"/>
    <property name="TIMEOUT" type="int" value="3" readOnly="true"/>

    <property name="code" type="int" readOnly="true" />
    <property name="message" type="String" readOnly="true" />
  </class>

  <trait name="XMLHttpRequestEventTarget" extends="EventTarget">
    <property name="onloadstart" type="function(Event)" readOnly="false"/>
    <property name="onprogress" type="function(Event)" readOnly="false"/>
    <property name="onabort" type="function(Event)" readOnly="false"/>
    <property name="onerror" type="function(Event)" readOnly="false"/>
    <property name="onload" type="function(Event)" readOnly="false"/>
    <property name="ontimeout" type="function(Event)" readOnly="false"/>
    <property name="onloadend" type="function(Event)" readOnly="false"/>
  </trait>
  <trait name="XMLHttpRequestUpload" extends="XMLHttpRequestEventTarget"/>

  <class name="FormData">
    <method returnType="void" name="append">
      <param name="name" type="String" optional="false"/>
      <param name="value" type="Object" optional="false"/>
    </method>
  </class>

  <class name="HTMLSelectElement">
    <property name="autofocus" type="Boolean"/>
    <property name="required" type="Boolean"/>
    <property name="selectedOptions" type="HTMLCollection"/>
    <property name="validationMessage" type="String"/>
    <property name="validity" type="ValidityState"/>
    <property name="willValidate" type="Boolean" readOnly="true"/>

    <method name="checkValidity" returnType="Boolean"/>
    <method name="item" returnType="Element">
      <param name="index" type="Number" optional="false"/>
    </method>
    <method name="namedItem" returnType="Element">
      <param name="name" type="String" optional="false"/>
    </method>
    <method name="setCustomValidity" returnType="void">
      <param name="error" type="String" optional="true"/>
    </method>
  </class>

  <trait name="ValidityState">
    <property name="valueMissing" type="Boolean" readOnly="true"/>
    <property name="typeMismatch" type="Boolean" readOnly="true"/>
    <property name="patternMismatch" type="Boolean" readOnly="true"/>
    <property name="tooLong" type="Boolean" readOnly="true"/>
    <property name="rangeUnderflow" type="Boolean" readOnly="true"/>
    <property name="rangeOverflow" type="Boolean" readOnly="true"/>
    <property name="stepMismatch" type="Boolean" readOnly="true"/>
    <property name="badInput" type="Boolean" readOnly="true"/>
    <property name="customError" type="Boolean" readOnly="true"/>
    <property name="valid" type="Boolean" readOnly="true"/>
  </trait>

  <class name="Document">
    <property name="head" type="HTMLHeadElement" readOnly="true" />
  </class>

  <class name="MutationObserver" paramPolicyMandatory="true">
    <method name="__constructor__">
      <param name="callback" type="Function"/>
    </method>
    <method name="observe" returnType="void">
      <param name="target" type="Node"/>
      <param name="options" type="{childList:boolean, attributes:boolean, characterData:boolean, subtree:boolean, attributeOldValue:boolean, characterDataOldValue:boolean, attributeFilter:Array&lt;String&gt;}"/>
    </method>
    <method name="disconnect" returnType="void" />
    <method name="takeRecords" returnType="Array&lt;MutationRecord&gt;"/>
  </class>
  <class name="MutationRecord">
    <property name="type" type="String" readOnly="true"/>
    <property name="target" type="Node" readOnly="true"/>
    <property name="addedNodes" type="NodeList" readOnly="true"/>
    <property name="removedNodes" type="NodeList" readOnly="true"/>
    <property name="previousSibling" type="Node" readOnly="true"/>
    <property name="nextSibling" type="Node" readOnly="true"/>
    <property name="attributeName" type="String" readOnly="true"/>
    <property name="attributeNamespace" type="String" readOnly="true"/>
    <property name="oldValue" type="String" readOnly="true"/>
  </class>

  <trait name="DataTransferItem">
    <property name="kind" type="String" readOnly="true"/>
    <property name="type" type="String" readOnly="true"/>

    <method name="getAsString">
      <param name="_callback" type="function(string):void" optional="true"/>
    </method>
    <method name="getAsFile" returnType="File"/>
  </trait>

  <trait name="DataTransferItemList">
    <property name="length" type="long" readOnly="true"/>
    <method name="getDataTransferItem" returnType="DataTransferItem">
      <param name="index" type="long" optional="false"/>
    </method>
    <method name="add">
      <param name="data" type="String" optional="false"/>
      <param name="type" type="String" optional="false"/>
    </method>
    <method name="add">
      <param name="data" type="File" optional="false"/>
    </method>
    <method name="remove">
      <param name="index" type="long" optional="false"/>
    </method>
    <method name="clear"/>
  </trait>

  <trait name="DataTransfer">
    <property name="dropEffect" type="String"/>
    <property name="effectAllowed" type="String"/>

    <property name="items" type="DataTransferItemList" readOnly="true"/>

    <method name="setDragImage">
      <param name="image" type="Element" optional="false"/>
      <param name="x" type="long" optional="false"/>
      <param name="y" type="long" optional="false"/>
    </method>

    <property name="types" type="String[]" readOnly="true"/>
    <property name="files" type="FileList" readOnly="true"/>

    <method name="getData" returnType="String">
      <param name="format" type="String"/>
    </method>
    <method name="setData">
      <param name="format" type="String" optional="false"/>
      <param name="data" type="String" optional="false"/>
    </method>
    <method name="clearData">
      <param name="format" type="String" optional="true"/>
    </method>
  </trait>
</Library>
